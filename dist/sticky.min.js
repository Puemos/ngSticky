!function(){"use strict";var module=angular.module("sticky",[]);module.directive("sticky",["$window",function($window){return{restrict:"A",scope:{disabled:"=disabledSticky"},link:function($scope,$elem,$attrs){var mediaQuery,stickyClass,unstickyClass,bodyClass,elem,$body,doc,initialCSS,initialStyle,isSticking,stickyLine,stickyBottomLine,offset,anchor,confine,prevOffset,matchMedia,usePlaceholder,placeholder,container,ngcontainer,$onResize=function(){$scope.$root&&!$scope.$root.$$phase?$scope.$apply(onResize):onResize()};$scope.initSticky=function(){switch(isSticking=!1,matchMedia=$window.matchMedia,$body=angular.element(document.body),elem=$elem[0],doc=document.documentElement,container=document.querySelector($attrs.container)||window,ngcontainer=angular.element(container),mediaQuery=$attrs.mediaQuery||!1,stickyClass=$attrs.stickyClass||"",unstickyClass=$attrs.unstickyClass||"",bodyClass=$attrs.bodyClass||"",usePlaceholder=void 0!==$attrs.useplaceholder,initialStyle=$elem.attr("style")||"",offset="string"==typeof $attrs.offset?parseInt($attrs.offset.replace(/px;?/,"")):0,anchor="string"==typeof $attrs.anchor?$attrs.anchor.toLowerCase().trim():"top",confine="string"==typeof $attrs.confine?$attrs.confine.toLowerCase().trim():"false",confine="true"===confine,initialCSS={zIndex:$elem.css("z-index"),top:$elem.css("top"),width:$elem.css("width"),position:$elem.css("position"),marginTop:$elem.css("margin-top"),cssLeft:$elem.css("left")},anchor){case"top":case"bottom":break;default:anchor="top"}prevOffset=$scope.getTopOffset(elem),angular.element(ngcontainer).on("scroll",$scope.checkIfShouldStick),angular.element($window).on("resize",$onResize),$scope.$on("$destroy",$scope.onDestroy)},$scope.getScrollTop=function(){if(void 0!==$window.pageYOffset)return $window.pageYOffset;var B=document.body,D=document.documentElement;return D=D.clientHeight?D:B,D.scrollTop},$scope.getTopOffset=function(element){if(element.getBoundingClientRect)return element.getBoundingClientRect().top+document.documentElement.scrollTop;var pixels=0;if(element.offsetParent)do{pixels+=element.offsetTop,element=element.offsetParent}while(element);return pixels},$scope.getBottomOffset=function(element){return element.offsetTop+element.clientHeight},$scope.shouldStickWithLimit=function(shouldApplyWithLimit){if("true"===shouldApplyWithLimit){var elementHeight=elem.offsetHeight;return $window.innerHeight-(elementHeight+parseInt(offset))<0}return!1};var onResize=function(){if(initialCSS.offsetWidth=elem.offsetWidth,$scope.unStickElement(),$scope.checkIfShouldStick(),isSticking){var parent=$window.getComputedStyle(elem.parentElement,null),initialOffsetWidth=elem.parentElement.offsetWidth-parent.getPropertyValue("padding-right").replace("px","")-parent.getPropertyValue("padding-left").replace("px","");$elem.css("width",initialOffsetWidth+"px")}};$scope.onDestroy=function(){angular.element(ngcontainer).off("scroll",$scope.checkIfShouldStick),angular.element($window).off("resize",$onResize),$onResize=null,bodyClass&&$body.removeClass(bodyClass),$scope.cloneElement&&$scope.cloneElement.remove(),placeholder&&placeholder.remove()},$scope.getClosest=function(array,num){var ans,minDiff=1e3;for(var i in array){var m=Math.abs(num-array[i]);m<minDiff&&(minDiff=m,ans=array[i])}return ans},$scope.stickElement=function(){var rect,absoluteLeft;$scope.cloneElement&&$scope.cloneElement.remove(),$scope.cloneElement=$elem.clone(),$scope.cloneElement.css("opacity",0),rect=$elem[0].getBoundingClientRect(),absoluteLeft=rect.left,initialCSS.offsetWidth=elem.offsetWidth,isSticking=!0,bodyClass&&$body.addClass(bodyClass),unstickyClass&&$elem.hasClass(unstickyClass)&&$elem.removeClass(unstickyClass),stickyClass&&$elem.addClass(stickyClass),$elem.after($scope.cloneElement),$elem.css("z-index","10").css("width",elem.offsetWidth+"px").css("position","fixed").css(anchor,offset+"px").css("left",absoluteLeft+"px").css("margin-top",0),"bottom"===anchor&&$elem.css("margin-bottom",0)},$scope.checkIfShouldStick=function(){if(!0===$scope.disabled)return $scope.unStickElement(),!1;var scrollTop,shouldStick,scrollBottom,scrolledDistance;if(mediaQuery&&!matchMedia("("+mediaQuery+")").matches&&!matchMedia(mediaQuery).matches)return void(isSticking&&$scope.unStickElement());if("top"===anchor?(scrolledDistance=$window.pageYOffset||doc.scrollTop||container.scrollTop,scrollTop=scrolledDistance-(doc.clientTop||ngcontainer.clientTop||0),shouldStick=!0===confine?scrollTop>=stickyLine&&scrollTop<=stickyBottomLine:scrollTop>=stickyLine):(scrollBottom=$window.pageYOffset+$window.innerHeight,shouldStick=scrollBottom<=stickyLine),!shouldStick||$scope.shouldStickWithLimit($attrs.stickLimit)||isSticking){if(!shouldStick&&isSticking){var from,compare,closest;compare=[stickyLine,stickyBottomLine],closest=$scope.getClosest(compare,scrollTop),closest===stickyLine?from="top":closest===stickyBottomLine&&(from="bottom"),$scope.unStickElement(from,scrollTop)}}else $scope.stickElement()},$scope.unStickElement=function(fromDirection){$elem.attr("style",initialStyle),isSticking=!1,bodyClass&&$body.removeClass(bodyClass),stickyClass&&$elem.removeClass(stickyClass),unstickyClass&&$elem.addClass(unstickyClass),$scope.cloneElement&&$scope.cloneElement.remove(),"top"===fromDirection?$elem.css("z-index",initialCSS.zIndex).css("width","").css("top",initialCSS.top).css("position",initialCSS.position).css("left",initialCSS.cssLeft).css("margin-top",initialCSS.marginTop):"bottom"===fromDirection&&!0===confine&&$elem.css("z-index",initialCSS.zIndex).css("width","").css("top","").css("bottom",0).css("position","absolute").css("left",initialCSS.cssLeft).css("margin-top",initialCSS.marginTop).css("margin-bottom",initialCSS.marginBottom),placeholder&&placeholder.remove()},$scope.$watch(function(){return!0===$scope.disabled?void $scope.unStickElement():isSticking?prevOffset+$scope.getScrollTop():(prevOffset="top"===anchor?$scope.getTopOffset(elem):$scope.getBottomOffset(elem))+$scope.getScrollTop()},function(newVal,oldVal){if((void 0===stickyLine||!isSticking)&&0!==newVal){stickyLine=newVal-offset,confine&&$elem.parent().css({position:"relative"});var parent=$elem.parent()[0],parentHeight=parseInt(parent.offsetHeight),marginBottom=parseInt($elem.css("margin-bottom").replace(/px;?/,""))||0;stickyBottomLine=parentHeight-(elem.offsetTop+elem.offsetHeight)+offset+marginBottom,$scope.checkIfShouldStick()}}),$scope.initSticky()}}}]),window.matchMedia=window.matchMedia||function(){return window.console&&console.warn&&console.warn("angular-sticky: This browser does not support matchMedia, therefore the minWidth option will not work on this browser. Polyfill matchMedia to fix this issue."),function(){return{matches:!0}}}(),module.name}();